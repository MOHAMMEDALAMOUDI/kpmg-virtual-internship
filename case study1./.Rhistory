getwd()
feb4<-read.csv("202101-divvy-tripdata.csv")
library(tidyverse)
library(reshape2)
library(reshape2)
install.packages("reshape2")
library(reshape2)
library(scales)
#importing the data
dailyActivity_merged <- read.csv(../input/fitbit/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
#importing the data
dailyActivity_merged <- read.csv(download /input/fitbit/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
#importing the data
dailyActivity_merged <- read.csv(download/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
#importing the data
dailyActivity_merged <- read.csv(Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
#importing the data
swted()
#importing the data
getwd()
#importing the data
getwd()
dailyActivity_merged <- read.csv(Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
library(tidyverse)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
library(scales)
#importing the data
getwd()
dailyActivity_merged <- read.csv(Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
dailyActivity_merged <- read.csv/Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16")
dailyActivity_merged <- read.csv(/Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16")
dailyActivity_merged <- read.csv(Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16")
dailyActivity_merged <- read.csv(Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16/dailyActivity_merged")
dailyActivity_merged <- read.csv(/Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16/dailyActivity_merged")
dailyActivity_merged <- read.csv(Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16/dailyActivity_merged")
dailyActivity_merged <- read.csv(//Users/mo/Desktop/case study1./Fitabase Data 4.12.16-5.12.16/dailyActivity_merged")
dailyActivity_merged <- read.csv(\\Users\mo\Desktop\case study1.\Fitabase Data 4.12.16-5.12.16\dailyActivity_merged")
dailyActivity_merged <- read.csv(\Users\mo\Desktop\case study1.\Fitabase Data 4.12.16-5.12.16\dailyActivity_merged")
dailyActivity_merged <- read.csv(\Users\mo\Desktop\case study1.\Fitabase Data 4.12.16-5.12.16\dailyActivity_merged.csv")
dailyActivity_merged <- read.csv(dailyActivity_merged.csv)
dailyActivity_merged <- read.csv(dailyActivity_merged)
#importing the data
getwd()
dailyActivity_merged <- read.csv(dailyActivity_merged)
dailyActivity_merged <- read.csv(dailyActivity_merged.csv)
library(tidyverse)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
library(scales)
#importing the data
getwd()
dailyActivity_merged <- read.csv(dailyActivity_merged.csv)
dailyActivity_merged <- read.csv("dailyActivity_merged.csv")
dailyCalories_merged<-read.csv("dailyCalories_merged")
dailyCalories_merged<-read.csv("dailyCalories_merged.csv")
dailyIntensities_merged <-read.csv("dailyIntensities_merged.csv")
dailySteps_merged <- read.csv("dailySteps_merged.csv")
sleepDay_merged <- read.csv("sleepDay_merged.csv")
sleepDay_merged <- read.csv("sleepDay_merged.csv")
weightLogInfo_merged <- read.csv("weightLogInfo_merged.csv")
options(repr.plot.width=30)
summary(daily_data)
#lets take peak on our data now:
summary(daily_data)
options(repr.plot.width=30)
#Here I join all the daily tables data and the sleep data. They share the Id and date columns so it easy to simply merge them by Id and then leave only one date column.
merge_1 <- merge(dailyActivity_merged, dailyCalories_merged, by = c("Id","Calories"))
merge_2 <- merge(dailyIntensities_merged, dailyIntensities_merged, by = c("Id","ActivityDay","SedentaryMinutes", "LightlyActiveMinutes","FairlyActiveMinutes","VeryActiveMinutes", "SedentaryActiveDistance", "LightActiveDistance", "ModeratelyActiveDistance", "VeryActiveDistance"))
merge_daily <- merge(merge_1, merge_2, by = c("Id","ActivityDay","SedentaryMinutes", "LightlyActiveMinutes","FairlyActiveMinutes","VeryActiveMinutes", "SedentaryActiveDistance", "LightActiveDistance", "ModeratelyActiveDistance", "VeryActiveDistance")) %>%
select(-ActivityDay) %>% rename(Date = ActivityDate)
daily_data <- merge(merge_daily, sleepDay_merged, by = "Id",all=TRUE) %>% drop_na() %>% select(-SleepDay, -TrackerDistance)
options(repr.plot.width=30)
#Lets take a peak into the data now:
summary(daily_data)
#In order to better visualize the data I will group the user into four categories based on for which of their activity types they have more minutes, this will be very useful to quickly see patterns and visualize them:
data_by_usertype <- daily_data %>%
summarise(
user_type = factor(case_when(
SedentaryMinutes > mean(SedentaryMinutes) & LightlyActiveMinutes < mean(LightlyActiveMinutes) & FairlyActiveMinutes < mean(FairlyActiveMinutes) & VeryActiveMinutes < mean(VeryActiveMinutes) ~ "Sedentary",
SedentaryMinutes < mean(SedentaryMinutes) & LightlyActiveMinutes > mean(LightlyActiveMinutes) & FairlyActiveMinutes < mean(FairlyActiveMinutes) & VeryActiveMinutes < mean(VeryActiveMinutes) ~ "Lightly Active",
SedentaryMinutes < mean(SedentaryMinutes) & LightlyActiveMinutes < mean(LightlyActiveMinutes) & FairlyActiveMinutes > mean(FairlyActiveMinutes) & VeryActiveMinutes < mean(VeryActiveMinutes) ~ "Fairly Active",
SedentaryMinutes < mean(SedentaryMinutes) & LightlyActiveMinutes < mean(LightlyActiveMinutes) & FairlyActiveMinutes < mean(FairlyActiveMinutes) & VeryActiveMinutes > mean(VeryActiveMinutes) ~ "Very Active",
),levels=c("Sedentary", "Lightly Active", "Fairly Active", "Very Active")), Calories, .group=Id) %>%
drop_na()
#With this new table I can now visualize both the user type distribution and the calories burned for every user type:
data_by_usertype %>%
group_by(user_type) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type) %>%
summarise(total_percent = total / totals) %>%
ggplot(aes(user_type,y=total_percent, fill=user_type)) +
geom_col()+
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(title="User type distridution", x=NULL) +
theme(legend.position="none", text = element_text(size = 20),plot.title = element_text(hjust = 0.5))
ggplot(data_by_usertype, aes(user_type, Calories, fill=user_type)) +
geom_boxplot() +
theme(legend.position="none") +
labs(title="Calories burned by User type", x=NULL) +
theme(legend.position="none", text = element_text(size = 20),plot.title = element_text(hjust = 0.5))
